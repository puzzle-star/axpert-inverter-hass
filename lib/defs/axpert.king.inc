## AXPERT KING RACK


# -----------------------------------------------------------------------------------------------------------
# Commands
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_STATUS_COMMANDS
declare -A AXPERT_SETTINGS

AXPERT_STATUS_COMMANDS[serial]="QSID"
AXPERT_STATUS_COMMANDS[model]="QMN"
AXPERT_STATUS_COMMANDS[firmware]="QVFW QVFW2 QVFW3 QPI"

AXPERT_STATUS_COMMANDS[settings]="QPIRI QFLAG"
AXPERT_STATUS_COMMANDS[energy]="QLT QET"
AXPERT_STATUS_COMMANDS[status]="QMOD QPIGS QPIWS"

AXPERT_STATUS_COMMANDS[monitor]="QMOD QPIGS QPIWS QPIRI QFLAG QLT QET !"



# -----------------------------------------------------------------------------------------------------------
# QSID
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QSID
AXPERT_COMMAND_QSID_RESPONSE_COUNT=1

# QSID: serial_number

declare -A AXPERT_COMMAND_QSID_SERIAL_NUMBER
AXPERT_COMMAND_QSID[serial_number]="Serial Number"
AXPERT_COMMAND_QSID_SERIAL_NUMBER[INDEX]=1
AXPERT_COMMAND_QSID_SERIAL_NUMBER[TYPE]="!sensor"


# -----------------------------------------------------------------------------------------------------------
# QMN
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QMN
AXPERT_COMMAND_QMN_RESPONSE_COUNT=1

# QMN: model_name

declare -A AXPERT_COMMAND_QMN_MODEL_NAME
AXPERT_COMMAND_QMN[model_name]="Model Name"
AXPERT_COMMAND_QMN_MODEL_NAME[INDEX]=1
AXPERT_COMMAND_QMN_MODEL_NAME[TYPE]="!sensor"


# -----------------------------------------------------------------------------------------------------------
# QVFW
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QVFW
AXPERT_COMMAND_QVFW_RESPONSE_COUNT=1

# QVFW: firmware_version

declare -A AXPERT_COMMAND_QVFW_FIRMWARE_VERSION
AXPERT_COMMAND_QVFW[firmware_version]="Firmware Version"
AXPERT_COMMAND_QVFW_FIRMWARE_VERSION[INDEX]=1
AXPERT_COMMAND_QVFW_FIRMWARE_VERSION[TYPE]="!sensor"
AXPERT_COMMAND_QVFW_FIRMWARE_VERSION[STRIP]="VERFW:"
AXPERT_COMMAND_QVFW_FIRMWARE_VERSION[POSTPROCESS]="axpert_postprocess_firmware_version"


# -----------------------------------------------------------------------------------------------------------
# QVFW2
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QVFW2
AXPERT_COMMAND_QVFW2_RESPONSE_COUNT=1

# QVFW2: firmware_version_other

declare -A AXPERT_COMMAND_QVFW2_FIRMWARE_VERSION_OTHER
AXPERT_COMMAND_QVFW2["firmware_version_other"]="Firmware Version (Other)"
AXPERT_COMMAND_QVFW2_FIRMWARE_VERSION_OTHER[INDEX]=1
AXPERT_COMMAND_QVFW2_FIRMWARE_VERSION_OTHER[TYPE]="!sensor"
AXPERT_COMMAND_QVFW2_FIRMWARE_VERSION_OTHER[STRIP]="VERFW2:"
AXPERT_COMMAND_QVFW2_FIRMWARE_VERSION_OTHER[POSTPROCESS]="axpert_postprocess_firmware_version"


# -----------------------------------------------------------------------------------------------------------
# QVFW3
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QVFW3
AXPERT_COMMAND_QVFW3_RESPONSE_COUNT=1

# QVFW3: firmware_version_other

declare -A AXPERT_COMMAND_QVFW3_FIRMWARE_VERSION_REMOTE_PANEL
AXPERT_COMMAND_QVFW3["firmware_version_remote_panel"]="Firmware Version (Remote Panel)"
AXPERT_COMMAND_QVFW3_FIRMWARE_VERSION_REMOTE_PANEL[INDEX]=1
AXPERT_COMMAND_QVFW3_FIRMWARE_VERSION_REMOTE_PANEL[TYPE]="!sensor"
AXPERT_COMMAND_QVFW3_FIRMWARE_VERSION_REMOTE_PANEL[STRIP]="VERFW:"
AXPERT_COMMAND_QVFW3_FIRMWARE_VERSION_REMOTE_PANEL[POSTPROCESS]="axpert_postprocess_firmware_version"


# -----------------------------------------------------------------------------------------------------------
# QPI
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QPI
AXPERT_COMMAND_QPI_RESPONSE_COUNT=1

# QPI: protocol_version

declare -A AXPERT_COMMAND_QPI_PROTOCOL_VERSION
AXPERT_COMMAND_QPI[protocol_version]="Protocol Version"
AXPERT_COMMAND_QPI_PROTOCOL_VERSION[INDEX]=1
AXPERT_COMMAND_QPI_PROTOCOL_VERSION[TYPE]="!sensor"


# -----------------------------------------------------------------------------------------------------------
# QMOD
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QMOD
AXPERT_COMMAND_QMOD_RESPONSE_COUNT=1

# QMOD: mode

declare -A AXPERT_COMMAND_QMOD_MODE
AXPERT_COMMAND_QMOD[mode]="Mode"
AXPERT_COMMAND_QMOD_MODE[INDEX]=1
AXPERT_COMMAND_QMOD_MODE[TYPE]="sensor.enum"
AXPERT_COMMAND_QMOD_MODE[VALUES]="B C D E F H L P S Y"
AXPERT_COMMAND_QMOD_MODE[VALUE_B]="Battery"
AXPERT_COMMAND_QMOD_MODE[VALUE_C]="Charge"
AXPERT_COMMAND_QMOD_MODE[VALUE_D]="Power-off"
AXPERT_COMMAND_QMOD_MODE[VALUE_E]="Eco"
AXPERT_COMMAND_QMOD_MODE[VALUE_F]="Fault"
AXPERT_COMMAND_QMOD_MODE[VALUE_H]="Power Saving"
AXPERT_COMMAND_QMOD_MODE[VALUE_L]="Line"
AXPERT_COMMAND_QMOD_MODE[VALUE_P]="Power-on"
AXPERT_COMMAND_QMOD_MODE[VALUE_S]="Standby"
AXPERT_COMMAND_QMOD_MODE[VALUE_Y]="Bypass"


# -----------------------------------------------------------------------------------------------------------
# QFLAG
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QFLAG
AXPERT_COMMAND_QFLAG_RESPONSE_COUNT=1

# QFLAG: setting_buzzer

declare -A AXPERT_COMMAND_QFLAG_SETTING_BUZZER
AXPERT_COMMAND_QFLAG[setting_buzzer]="Alarm Buzzer"
AXPERT_COMMAND_QFLAG_SETTING_BUZZER[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_BUZZER[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_BUZZER[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_BUZZER[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_BUZZER[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_BUZZER[POSTPROCESS]="axpert_postprocess_setting_flags a"

declare -A AXPERT_SETTING_SETTING_BUZZER
AXPERT_SETTINGS[setting_buzzer]="QFLAG"
AXPERT_SETTING_SETTING_BUZZER[COMMAND]="P{}"
AXPERT_SETTING_SETTING_BUZZER[VALUE_DISABLED]="Da"
AXPERT_SETTING_SETTING_BUZZER[VALUE_ENABLED]="Ea"

# QFLAG: setting_overload_bypass

declare -A AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS
AXPERT_COMMAND_QFLAG[setting_overload_bypass]="Overload Bypass"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS[POSTPROCESS]="axpert_postprocess_setting_flags b"

declare -A AXPERT_SETTING_SETTING_OVERLOAD_BYPASS
AXPERT_SETTINGS[setting_overload_bypass]="QFLAG"
AXPERT_SETTING_SETTING_OVERLOAD_BYPASS[COMMAND]="P{}"
AXPERT_SETTING_SETTING_OVERLOAD_BYPASS[VALUE_DISABLED]="Db"
AXPERT_SETTING_SETTING_OVERLOAD_BYPASS[VALUE_ENABLED]="Eb"

# QFLAG: setting_overload_bypass_2

declare -A AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS_2
AXPERT_COMMAND_QFLAG[setting_overload_bypass_2]="Overload Bypass (2)"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS_2[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS_2[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS_2[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS_2[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS_2[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_BYPASS_2[POSTPROCESS]="axpert_postprocess_setting_flags c"

declare -A AXPERT_SETTING_SETTING_OVERLOAD_BYPASS_2
AXPERT_SETTINGS[setting_overload_bypass_2]="QFLAG"
AXPERT_SETTING_SETTING_OVERLOAD_BYPASS_2[COMMAND]="P{}"
AXPERT_SETTING_SETTING_OVERLOAD_BYPASS_2[VALUE_DISABLED]="Dc"
AXPERT_SETTING_SETTING_OVERLOAD_BYPASS_2[VALUE_ENABLED]="Ec"

# QFLAG: setting_solar_feed_to_grid

# declare -A AXPERT_COMMAND_QFLAG_SETTING_SOLAR_FEED_TO_GRID
# AXPERT_COMMAND_QFLAG[setting_solar_feed_to_grid]="Solar Feed to Grid (reserved)"
# AXPERT_COMMAND_QFLAG_SETTING_SOLAR_FEED_TO_GRID[INDEX]=1
# AXPERT_COMMAND_QFLAG_SETTING_SOLAR_FEED_TO_GRID[TYPE]="!select"
# AXPERT_COMMAND_QFLAG_SETTING_SOLAR_FEED_TO_GRID[VALUES]="disabled enabled"
# AXPERT_COMMAND_QFLAG_SETTING_SOLAR_FEED_TO_GRID[VALUE_DISABLED]="Disabled"
# AXPERT_COMMAND_QFLAG_SETTING_SOLAR_FEED_TO_GRID[VALUE_ENABLED]="Enabled"
# AXPERT_COMMAND_QFLAG_SETTING_SOLAR_FEED_TO_GRID[POSTPROCESS]="axpert_postprocess_setting_flags d"

declare -A AXPERT_SETTING_SETTING_SOLAR_FEED_TO_GRID
AXPERT_SETTINGS[setting_solar_feed_to_grid]="QFLAG"
AXPERT_SETTING_SETTING_SOLAR_FEED_TO_GRID[COMMAND]="P{}"
AXPERT_SETTING_SETTING_SOLAR_FEED_TO_GRID[VALUE_DISABLED]="Dd"
AXPERT_SETTING_SETTING_SOLAR_FEED_TO_GRID[VALUE_ENABLED]="Ed"

# QFLAG: setting_lcd_display_escape

declare -A AXPERT_COMMAND_QFLAG_SETTING_LCD_DISPLAY_ESCAPE
AXPERT_COMMAND_QFLAG[setting_lcd_display_escape]="LCD Display Escape"
AXPERT_COMMAND_QFLAG_SETTING_LCD_DISPLAY_ESCAPE[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_LCD_DISPLAY_ESCAPE[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_LCD_DISPLAY_ESCAPE[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_LCD_DISPLAY_ESCAPE[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_LCD_DISPLAY_ESCAPE[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_LCD_DISPLAY_ESCAPE[POSTPROCESS]="axpert_postprocess_setting_flags k"

declare -A AXPERT_SETTING_SETTING_LCD_DISPLAY_ESCAPE
AXPERT_SETTINGS[setting_lcd_display_escape]="QFLAG"
AXPERT_SETTING_SETTING_LCD_DISPLAY_ESCAPE[COMMAND]="P{}"
AXPERT_SETTING_SETTING_LCD_DISPLAY_ESCAPE[VALUE_DISABLED]="Dk"
AXPERT_SETTING_SETTING_LCD_DISPLAY_ESCAPE[VALUE_ENABLED]="Ek"

# QFLAG: setting_battery_connect_status

declare -A AXPERT_COMMAND_QFLAG_SETTING_BATTERY_CONNECT_STATUS
AXPERT_COMMAND_QFLAG[setting_battery_connect_status]="Battery Connect Status"
AXPERT_COMMAND_QFLAG_SETTING_BATTERY_CONNECT_STATUS[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_BATTERY_CONNECT_STATUS[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_BATTERY_CONNECT_STATUS[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_BATTERY_CONNECT_STATUS[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_BATTERY_CONNECT_STATUS[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_BATTERY_CONNECT_STATUS[POSTPROCESS]="axpert_postprocess_setting_flags m"

declare -A AXPERT_SETTING_SETTING_BATTERY_CONNECT_STATUS
AXPERT_SETTINGS[setting_battery_connect_status]="QFLAG"
AXPERT_SETTING_SETTING_BATTERY_CONNECT_STATUS[COMMAND]="P{}"
AXPERT_SETTING_SETTING_BATTERY_CONNECT_STATUS[VALUE_DISABLED]="Dm"
AXPERT_SETTING_SETTING_BATTERY_CONNECT_STATUS[VALUE_ENABLED]="Em"

# QFLAG: setting_overload_restart

declare -A AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_RESTART
AXPERT_COMMAND_QFLAG[setting_overload_restart]="Overload Restart"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_RESTART[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_RESTART[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_RESTART[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_RESTART[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_RESTART[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERLOAD_RESTART[POSTPROCESS]="axpert_postprocess_setting_flags u"

declare -A AXPERT_SETTING_SETTING_OVERLOAD_RESTART
AXPERT_SETTINGS[setting_overload_restart]="QFLAG"
AXPERT_SETTING_SETTING_OVERLOAD_RESTART[COMMAND]="P{}"
AXPERT_SETTING_SETTING_OVERLOAD_RESTART[VALUE_DISABLED]="Du"
AXPERT_SETTING_SETTING_OVERLOAD_RESTART[VALUE_ENABLED]="Eu"

# QFLAG: setting_overheat_restart

declare -A AXPERT_COMMAND_QFLAG_SETTING_OVERHEAT_RESTART
AXPERT_COMMAND_QFLAG[setting_overheat_restart]="Overheat Restart"
AXPERT_COMMAND_QFLAG_SETTING_OVERHEAT_RESTART[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_OVERHEAT_RESTART[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_OVERHEAT_RESTART[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERHEAT_RESTART[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERHEAT_RESTART[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_OVERHEAT_RESTART[POSTPROCESS]="axpert_postprocess_setting_flags v"

declare -A AXPERT_SETTING_SETTING_OVERHEAT_RESTART
AXPERT_SETTINGS[setting_overheat_restart]="QFLAG"
AXPERT_SETTING_SETTING_OVERHEAT_RESTART[COMMAND]="P{}"
AXPERT_SETTING_SETTING_OVERHEAT_RESTART[VALUE_DISABLED]="Dv"
AXPERT_SETTING_SETTING_OVERHEAT_RESTART[VALUE_ENABLED]="Ev"

# QFLAG: setting_display_backlight

declare -A AXPERT_COMMAND_QFLAG_SETTING_DISPLAY_BACKLIGHT
AXPERT_COMMAND_QFLAG[setting_display_backlight]="Display Backlight"
AXPERT_COMMAND_QFLAG_SETTING_DISPLAY_BACKLIGHT[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_DISPLAY_BACKLIGHT[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_DISPLAY_BACKLIGHT[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_DISPLAY_BACKLIGHT[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_DISPLAY_BACKLIGHT[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_DISPLAY_BACKLIGHT[POSTPROCESS]="axpert_postprocess_setting_flags x"

declare -A AXPERT_SETTING_SETTING_DISPLAY_BACKLIGHT
AXPERT_SETTINGS[setting_display_backlight]="QFLAG"
AXPERT_SETTING_SETTING_DISPLAY_BACKLIGHT[COMMAND]="P{}"
AXPERT_SETTING_SETTING_DISPLAY_BACKLIGHT[VALUE_DISABLED]="Dx"
AXPERT_SETTING_SETTING_DISPLAY_BACKLIGHT[VALUE_ENABLED]="Ex"

# QFLAG: setting_primary_source_interrupted_alarm

declare -A AXPERT_COMMAND_QFLAG_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM
AXPERT_COMMAND_QFLAG[setting_primary_source_interrupted_alarm]="Primary Source Interrupted Alarm"
AXPERT_COMMAND_QFLAG_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM[POSTPROCESS]="axpert_postprocess_setting_flags y"

declare -A AXPERT_SETTING_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM
AXPERT_SETTINGS[setting_primary_source_interrupted_alarm]="QFLAG"
AXPERT_SETTING_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM[COMMAND]="P{}"
AXPERT_SETTING_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM[VALUE_DISABLED]="Dy"
AXPERT_SETTING_SETTING_PRIMARY_SOURCE_INTERRUPTED_ALARM[VALUE_ENABLED]="Ey"

# QFLAG: setting_record_fault_codes

declare -A AXPERT_COMMAND_QFLAG_SETTING_RECORD_FAULT_CODES
AXPERT_COMMAND_QFLAG[setting_record_fault_codes]="Record Fault Codes"
AXPERT_COMMAND_QFLAG_SETTING_RECORD_FAULT_CODES[INDEX]=1
AXPERT_COMMAND_QFLAG_SETTING_RECORD_FAULT_CODES[TYPE]="select"
AXPERT_COMMAND_QFLAG_SETTING_RECORD_FAULT_CODES[VALUES]="disabled enabled"
AXPERT_COMMAND_QFLAG_SETTING_RECORD_FAULT_CODES[VALUE_DISABLED]="Disabled"
AXPERT_COMMAND_QFLAG_SETTING_RECORD_FAULT_CODES[VALUE_ENABLED]="Enabled"
AXPERT_COMMAND_QFLAG_SETTING_RECORD_FAULT_CODES[POSTPROCESS]="axpert_postprocess_setting_flags z"

declare -A AXPERT_SETTING_SETTING_RECORD_FAULT_CODES
AXPERT_SETTINGS[setting_record_fault_codes]="QFLAG"
AXPERT_SETTING_SETTING_RECORD_FAULT_CODES[COMMAND]="P{}"
AXPERT_SETTING_SETTING_RECORD_FAULT_CODES[VALUE_DISABLED]="Dz"
AXPERT_SETTING_SETTING_RECORD_FAULT_CODES[VALUE_ENABLED]="Ez"


# -----------------------------------------------------------------------------------------------------------
# QLT
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QLT
AXPERT_COMMAND_QLT_RESPONSE_COUNT=1

# QLT: load_energy_counter

declare -A AXPERT_COMMAND_QLT_LOAD_ENERGY_COUNTER
AXPERT_COMMAND_QLT[load_energy_counter]="Load Energy Counter"
AXPERT_COMMAND_QLT_LOAD_ENERGY_COUNTER[INDEX]=1
AXPERT_COMMAND_QLT_LOAD_ENERGY_COUNTER[TYPE]="total.energy"
AXPERT_COMMAND_QLT_LOAD_ENERGY_COUNTER[POSTPROCESS]="axpert_postprocess_wh_to_kwh"
AXPERT_COMMAND_QLT_LOAD_ENERGY_COUNTER[UNITS]="kWh"


# -----------------------------------------------------------------------------------------------------------
# QET
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QET
AXPERT_COMMAND_QET_RESPONSE_COUNT=1

# QET: pv_energy_counter

declare -A AXPERT_COMMAND_QET_PV_ENERGY_COUNTER
AXPERT_COMMAND_QET[pv_energy_counter]="PV Energy Counter"
AXPERT_COMMAND_QET_PV_ENERGY_COUNTER[INDEX]=1
AXPERT_COMMAND_QET_PV_ENERGY_COUNTER[TYPE]="total.energy"
AXPERT_COMMAND_QET_PV_ENERGY_COUNTER[POSTPROCESS]="axpert_postprocess_wh_to_kwh"
AXPERT_COMMAND_QET_PV_ENERGY_COUNTER[UNITS]="kWh"


# -----------------------------------------------------------------------------------------------------------
# QPIRI
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QPIRI
AXPERT_COMMAND_QPIRI_RESPONSE_COUNT=27

# QPIRI: device_grid_rating_voltage

declare -A AXPERT_COMMAND_QPIRI_DEVICE_GRID_RATING_VOLTAGE
AXPERT_COMMAND_QPIRI[device_grid_rating_voltage]="Device Grid Rating Voltage"
AXPERT_COMMAND_QPIRI_DEVICE_GRID_RATING_VOLTAGE[INDEX]=1
AXPERT_COMMAND_QPIRI_DEVICE_GRID_RATING_VOLTAGE[TYPE]="sensor.voltage"
AXPERT_COMMAND_QPIRI_DEVICE_GRID_RATING_VOLTAGE[UNITS]="V"

# QPIRI: device_grid_rating_current

declare -A AXPERT_COMMAND_QPIRI_DEVICE_GRID_RATING_CURRENT
AXPERT_COMMAND_QPIRI[device_grid_rating_current]="Device Grid Rating Current"
AXPERT_COMMAND_QPIRI_DEVICE_GRID_RATING_CURRENT[INDEX]=2
AXPERT_COMMAND_QPIRI_DEVICE_GRID_RATING_CURRENT[TYPE]="sensor.current"
AXPERT_COMMAND_QPIRI_DEVICE_GRID_RATING_CURRENT[UNITS]="A"

# QPIRI: device_ac_output_rating_voltage

declare -A AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_VOLTAGE
AXPERT_COMMAND_QPIRI[device_ac_output_rating_voltage]="Device AC output Rating Voltage"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_VOLTAGE[INDEX]=3
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_VOLTAGE[TYPE]="sensor.voltage"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_VOLTAGE[UNITS]="V"

# QPIRI: device_ac_output_rating_frequency

declare -A AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_FREQUENCY
AXPERT_COMMAND_QPIRI[device_ac_output_rating_frequency]="Device AC Output Rating Frequency"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_FREQUENCY[INDEX]=4
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_FREQUENCY[TYPE]="sensor.frequency"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_FREQUENCY[UNITS]="Hz"

# QPIRI: device_ac_output_rating_current

declare -A AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_CURRENT
AXPERT_COMMAND_QPIRI[device_ac_output_rating_current]="Device AC Output Rating Current"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_CURRENT[INDEX]=5
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_CURRENT[TYPE]="sensor.current"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_CURRENT[UNITS]="A"

# QPIRI: device_ac_output_rating_apparent_power

declare -A AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_APPARENT_POWER
AXPERT_COMMAND_QPIRI[device_ac_output_rating_apparent_power]="Device AC Output Rating Apparent Power"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_APPARENT_POWER[INDEX]=6
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_APPARENT_POWER[TYPE]="sensor.apparent_power"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_APPARENT_POWER[UNITS]="VA"

# QPIRI: device_ac_output_rating_active_power

declare -A AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_ACTIVE_POWER
AXPERT_COMMAND_QPIRI[device_ac_output_rating_active_power]="Device AC Output Rating Active Power"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_ACTIVE_POWER[INDEX]=7
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_ACTIVE_POWER[TYPE]="sensor.power"
AXPERT_COMMAND_QPIRI_DEVICE_AC_OUTPUT_RATING_ACTIVE_POWER[UNITS]="W"

# QPIRI: battery_rating_voltage

declare -A AXPERT_COMMAND_QPIRI_BATTERY_RATING_VOLTAGE
AXPERT_COMMAND_QPIRI[battery_rating_voltage]="Battery Rating Voltage"
AXPERT_COMMAND_QPIRI_BATTERY_RATING_VOLTAGE[INDEX]=8
AXPERT_COMMAND_QPIRI_BATTERY_RATING_VOLTAGE[TYPE]="sensor.voltage"
AXPERT_COMMAND_QPIRI_BATTERY_RATING_VOLTAGE[UNITS]="V"

# QPIRI: battery_recharge_voltage

declare -A AXPERT_COMMAND_QPIRI_BATTERY_RECHARGE_VOLTAGE
AXPERT_COMMAND_QPIRI[battery_recharge_voltage]="Battery Recharge Voltage"
AXPERT_COMMAND_QPIRI_BATTERY_RECHARGE_VOLTAGE[INDEX]=9
AXPERT_COMMAND_QPIRI_BATTERY_RECHARGE_VOLTAGE[TYPE]="sensor.voltage"
AXPERT_COMMAND_QPIRI_BATTERY_RECHARGE_VOLTAGE[UNITS]="V"

# QPIRI: battery_under_voltage

declare -A AXPERT_COMMAND_QPIRI_BATTERY_UNDER_VOLTAGE
AXPERT_COMMAND_QPIRI[battery_under_voltage]="Battery Under Voltage"
AXPERT_COMMAND_QPIRI_BATTERY_UNDER_VOLTAGE[INDEX]=10
AXPERT_COMMAND_QPIRI_BATTERY_UNDER_VOLTAGE[TYPE]="sensor.voltage"
AXPERT_COMMAND_QPIRI_BATTERY_UNDER_VOLTAGE[UNITS]="V"

# QPIRI: battery_bulk_voltage

declare -A AXPERT_COMMAND_QPIRI_BATTERY_BULK_VOLTAGE
AXPERT_COMMAND_QPIRI[battery_bulk_voltage]="Battery Bulk Voltage"
AXPERT_COMMAND_QPIRI_BATTERY_BULK_VOLTAGE[INDEX]=11
AXPERT_COMMAND_QPIRI_BATTERY_BULK_VOLTAGE[TYPE]="sensor.voltage"
AXPERT_COMMAND_QPIRI_BATTERY_BULK_VOLTAGE[UNITS]="V"

# QPIRI: battery_float_voltage

declare -A AXPERT_COMMAND_QPIRI_BATTERY_FLOAT_VOLTAGE
AXPERT_COMMAND_QPIRI[battery_float_voltage]="Battery Float Voltage"
AXPERT_COMMAND_QPIRI_BATTERY_FLOAT_VOLTAGE[INDEX]=12
AXPERT_COMMAND_QPIRI_BATTERY_FLOAT_VOLTAGE[TYPE]="sensor.voltage"
AXPERT_COMMAND_QPIRI_BATTERY_FLOAT_VOLTAGE[UNITS]="V"

# QPIRI: battery_type

declare -A AXPERT_COMMAND_QPIRI_BATTERY_TYPE
AXPERT_COMMAND_QPIRI[battery_type]="Battery Type"
AXPERT_COMMAND_QPIRI_BATTERY_TYPE[INDEX]=13
AXPERT_COMMAND_QPIRI_BATTERY_TYPE[TYPE]="sensor.enum"
AXPERT_COMMAND_QPIRI_BATTERY_TYPE[VALUES]="0 1 2 3"
AXPERT_COMMAND_QPIRI_BATTERY_TYPE[VALUE_0]="AGM"
AXPERT_COMMAND_QPIRI_BATTERY_TYPE[VALUE_1]="Flooded"
AXPERT_COMMAND_QPIRI_BATTERY_TYPE[VALUE_2]="User"
AXPERT_COMMAND_QPIRI_BATTERY_TYPE[VALUE_3]="Pylontech"

# QPIRI: max_ac_charging_current

declare -A AXPERT_COMMAND_QPIRI_MAX_AC_CHARGING_CURRENT
AXPERT_COMMAND_QPIRI[max_ac_charging_current]="Max AC Charging Current"
AXPERT_COMMAND_QPIRI_MAX_AC_CHARGING_CURRENT[INDEX]=14
AXPERT_COMMAND_QPIRI_MAX_AC_CHARGING_CURRENT[TYPE]="sensor.current"
AXPERT_COMMAND_QPIRI_MAX_AC_CHARGING_CURRENT[UNITS]="A"

# QPIRI: max_charging_current

declare -A AXPERT_COMMAND_QPIRI_MAX_CHARGING_CURRENT
AXPERT_COMMAND_QPIRI[max_charging_current]="Max Charging Current"
AXPERT_COMMAND_QPIRI_MAX_CHARGING_CURRENT[INDEX]=15
AXPERT_COMMAND_QPIRI_MAX_CHARGING_CURRENT[TYPE]="sensor.current"
AXPERT_COMMAND_QPIRI_MAX_CHARGING_CURRENT[UNITS]="A"

# QPIRI: device_input_voltage_range

declare -A AXPERT_COMMAND_QPIRI_DEVICE_INPUT_VOLTAGE_RANGE
AXPERT_COMMAND_QPIRI[device_input_voltage_range]="Device Input Voltage Range"
AXPERT_COMMAND_QPIRI_DEVICE_INPUT_VOLTAGE_RANGE[INDEX]=16
AXPERT_COMMAND_QPIRI_DEVICE_INPUT_VOLTAGE_RANGE[TYPE]="!sensor.enum"
AXPERT_COMMAND_QPIRI_DEVICE_INPUT_VOLTAGE_RANGE[VALUES]="0 1"
AXPERT_COMMAND_QPIRI_DEVICE_INPUT_VOLTAGE_RANGE[VALUE_0]="Appliance"
AXPERT_COMMAND_QPIRI_DEVICE_INPUT_VOLTAGE_RANGE[VALUE_1]="UPS"

# QPIRI: output_source_priority

declare -A AXPERT_COMMAND_QPIRI_OUTPUT_SOURCE_PRIORITY
AXPERT_COMMAND_QPIRI[output_source_priority]="Output Source Priority"
AXPERT_COMMAND_QPIRI_OUTPUT_SOURCE_PRIORITY[INDEX]=17
AXPERT_COMMAND_QPIRI_OUTPUT_SOURCE_PRIORITY[TYPE]="select"
AXPERT_COMMAND_QPIRI_OUTPUT_SOURCE_PRIORITY[VALUES]="0 1 2"
AXPERT_COMMAND_QPIRI_OUTPUT_SOURCE_PRIORITY[VALUE_0]="Grid First"
AXPERT_COMMAND_QPIRI_OUTPUT_SOURCE_PRIORITY[VALUE_1]="Solar First"
AXPERT_COMMAND_QPIRI_OUTPUT_SOURCE_PRIORITY[VALUE_2]="Solar / Battery / Grid"

declare -A AXPERT_SETTING_OUTPUT_SOURCE_PRIORITY
AXPERT_SETTINGS[output_source_priority]="QPIRI"
AXPERT_SETTING_OUTPUT_SOURCE_PRIORITY[COMMAND]="POP0{}"

# QPIRI: charger_source_priority

declare -A AXPERT_COMMAND_QPIRI_CHARGER_SOURCE_PRIORITY
AXPERT_COMMAND_QPIRI[charger_source_priority]="Charger Source Priority"
AXPERT_COMMAND_QPIRI_CHARGER_SOURCE_PRIORITY[INDEX]=18
AXPERT_COMMAND_QPIRI_CHARGER_SOURCE_PRIORITY[TYPE]="select"
AXPERT_COMMAND_QPIRI_CHARGER_SOURCE_PRIORITY[VALUES]="0 1 2 3"
AXPERT_COMMAND_QPIRI_CHARGER_SOURCE_PRIORITY[VALUE_0]="Solar First"
AXPERT_COMMAND_QPIRI_CHARGER_SOURCE_PRIORITY[VALUE_1]="Solar First / No Grid"
AXPERT_COMMAND_QPIRI_CHARGER_SOURCE_PRIORITY[VALUE_2]="Load First"
AXPERT_COMMAND_QPIRI_CHARGER_SOURCE_PRIORITY[VALUE_3]="Load First / No Grid"

declare -A AXPERT_SETTING_CHARGER_SOURCE_PRIORITY
AXPERT_SETTINGS[charger_source_priority]="QPIRI"
AXPERT_SETTING_CHARGER_SOURCE_PRIORITY[COMMAND]="PCP0{}"

# QPIRI: device_parallel_max_number

declare -A AXPERT_COMMAND_QPIRI_DEVICE_PARALLEL_MAX_NUMBER
AXPERT_COMMAND_QPIRI[device_parallel_max_number]="Device Parallel Max Number"
AXPERT_COMMAND_QPIRI_DEVICE_PARALLEL_MAX_NUMBER[INDEX]=19
AXPERT_COMMAND_QPIRI_DEVICE_PARALLEL_MAX_NUMBER[TYPE]="!sensor"
AXPERT_COMMAND_QPIRI_DEVICE_PARALLEL_MAX_NUMBER[UNITS]=

# QPIRI: device_machine_type

declare -A AXPERT_COMMAND_QPIRI_DEVICE_MACHINE_TYPE
AXPERT_COMMAND_QPIRI[device_machine_type]="Device Machine Type"
AXPERT_COMMAND_QPIRI_DEVICE_MACHINE_TYPE[INDEX]=20
AXPERT_COMMAND_QPIRI_DEVICE_MACHINE_TYPE[TYPE]="!sensor.enum"
AXPERT_COMMAND_QPIRI_DEVICE_MACHINE_TYPE[VALUES]="00 01 10"
AXPERT_COMMAND_QPIRI_DEVICE_MACHINE_TYPE[VALUE_00]="On-grid"
AXPERT_COMMAND_QPIRI_DEVICE_MACHINE_TYPE[VALUE_01]="Off-grid"
AXPERT_COMMAND_QPIRI_DEVICE_MACHINE_TYPE[VALUE_10]="Hybrid"

# QPIRI: device_topology

declare -A AXPERT_COMMAND_QPIRI_DEVICE_TOPOLOGY
AXPERT_COMMAND_QPIRI[device_topology]="Device Topology"
AXPERT_COMMAND_QPIRI_DEVICE_TOPOLOGY[INDEX]=21
AXPERT_COMMAND_QPIRI_DEVICE_TOPOLOGY[TYPE]="!sensor.enum"
AXPERT_COMMAND_QPIRI_DEVICE_TOPOLOGY[VALUES]="0 1"
AXPERT_COMMAND_QPIRI_DEVICE_TOPOLOGY[VALUE_0]="Transformerless"
AXPERT_COMMAND_QPIRI_DEVICE_TOPOLOGY[VALUE_1]="Transformer"

# QPIRI: output_mode

declare -A AXPERT_COMMAND_QPIRI_OUTPUT_MODE
AXPERT_COMMAND_QPIRI[output_mode]="Output Mode"
AXPERT_COMMAND_QPIRI_OUTPUT_MODE[INDEX]=22
AXPERT_COMMAND_QPIRI_OUTPUT_MODE[TYPE]="sensor.enum"
AXPERT_COMMAND_QPIRI_OUTPUT_MODE[VALUES]="0 1 2 3 4"
AXPERT_COMMAND_QPIRI_OUTPUT_MODE[VALUE_0]="Single Output"
AXPERT_COMMAND_QPIRI_OUTPUT_MODE[VALUE_1]="Parallel Output"
AXPERT_COMMAND_QPIRI_OUTPUT_MODE[VALUE_2]="Phase 1/3"
AXPERT_COMMAND_QPIRI_OUTPUT_MODE[VALUE_3]="Phase 2/3"
AXPERT_COMMAND_QPIRI_OUTPUT_MODE[VALUE_4]="Phase 3/3"

# QPIRI: battery_redischarge_voltage

declare -A AXPERT_COMMAND_QPIRI_BATTERY_REDISCHARGE_VOLTAGE
AXPERT_COMMAND_QPIRI[battery_redischarge_voltage]="Battery Redischarge Voltage"
AXPERT_COMMAND_QPIRI_BATTERY_REDISCHARGE_VOLTAGE[INDEX]=23
AXPERT_COMMAND_QPIRI_BATTERY_REDISCHARGE_VOLTAGE[TYPE]="sensor.voltage"
AXPERT_COMMAND_QPIRI_BATTERY_REDISCHARGE_VOLTAGE[UNITS]="V"

# QPIRI: pv_ok_condition_for_parallel

declare -A AXPERT_COMMAND_QPIRI_PV_OK_CONDITION_FOR_PARALLEL
AXPERT_COMMAND_QPIRI[pv_ok_condition_for_parallel]="PV OK Condition for Parallel"
AXPERT_COMMAND_QPIRI_PV_OK_CONDITION_FOR_PARALLEL[INDEX]=24
AXPERT_COMMAND_QPIRI_PV_OK_CONDITION_FOR_PARALLEL[TYPE]="select"
AXPERT_COMMAND_QPIRI_PV_OK_CONDITION_FOR_PARALLEL[VALUES]="0 1"
AXPERT_COMMAND_QPIRI_PV_OK_CONDITION_FOR_PARALLEL[VALUE_0]="Any"
AXPERT_COMMAND_QPIRI_PV_OK_CONDITION_FOR_PARALLEL[VALUE_1]="All"

declare -A AXPERT_SETTING_PV_OK_CONDITION_FOR_PARALLEL
AXPERT_SETTINGS[pv_ok_condition_for_parallel]="QPIRI"
AXPERT_SETTING_PV_OK_CONDITION_FOR_PARALLEL[COMMAND]="PPVOKC{}"

# QPIRI: pv_power_balance

declare -A AXPERT_COMMAND_QPIRI_PV_POWER_BALANCE
AXPERT_COMMAND_QPIRI[pv_power_balance]="PV Power Balance"
AXPERT_COMMAND_QPIRI_PV_POWER_BALANCE[INDEX]=25
AXPERT_COMMAND_QPIRI_PV_POWER_BALANCE[TYPE]="select"
AXPERT_COMMAND_QPIRI_PV_POWER_BALANCE[VALUES]="0 1"
AXPERT_COMMAND_QPIRI_PV_POWER_BALANCE[VALUE_0]="Max Charge Current"
AXPERT_COMMAND_QPIRI_PV_POWER_BALANCE[VALUE_1]="Max Charge / Load Power"

declare -A AXPERT_SETTING_PV_POWER_BALANCE
AXPERT_SETTINGS[pv_power_balance]="QPIRI"
AXPERT_SETTING_PV_POWER_BALANCE[COMMAND]="PSPB{}"

# QPIRI: max_charging_time_at_cv

declare -A AXPERT_COMMAND_QPIRI_MAX_CHARGING_TIME_AT_CV
AXPERT_COMMAND_QPIRI[max_charging_time_at_cv]="Max Charging Time At CV"
AXPERT_COMMAND_QPIRI_MAX_CHARGING_TIME_AT_CV[INDEX]=26
AXPERT_COMMAND_QPIRI_MAX_CHARGING_TIME_AT_CV[TYPE]="sensor.duration"
AXPERT_COMMAND_QPIRI_MAX_CHARGING_TIME_AT_CV[UNITS]="min"

# QPIRI: operation_logic

declare -A AXPERT_COMMAND_QPIRI_OPERATION_LOGIC
AXPERT_COMMAND_QPIRI[operation_logic]="Operation Logic"
AXPERT_COMMAND_QPIRI_OPERATION_LOGIC[INDEX]=27
AXPERT_COMMAND_QPIRI_OPERATION_LOGIC[TYPE]="select"
AXPERT_COMMAND_QPIRI_OPERATION_LOGIC[VALUES]="0 1 2"
AXPERT_COMMAND_QPIRI_OPERATION_LOGIC[VALUE_0]="Auto"
AXPERT_COMMAND_QPIRI_OPERATION_LOGIC[VALUE_1]="Online"
AXPERT_COMMAND_QPIRI_OPERATION_LOGIC[VALUE_2]="Eco"

declare -A AXPERT_SETTING_OPERATION_LOGIC
AXPERT_SETTINGS[operation_logic]="QPIRI"
AXPERT_SETTING_OPERATION_LOGIC[COMMAND]="POPLG0{}"

# QPIRI: max_discharging_current

# declare -A AXPERT_COMMAND_QPIRI_MAX_DISCHARGING_CURRENT
# AXPERT_COMMAND_QPIRI[max_discharging_current]="Max Discharging Current"
# AXPERT_COMMAND_QPIRI_MAX_DISCHARGING_CURRENT[INDEX]=28
# AXPERT_COMMAND_QPIRI_MAX_DISCHARGING_CURRENT[TYPE]="sensor.current"
# AXPERT_COMMAND_QPIRI_MAX_DISCHARGING_CURRENT[UNITS]="A"


# -----------------------------------------------------------------------------------------------------------
# QPIWS
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QPIWS
AXPERT_COMMAND_QPIWS_RESPONSE_COUNT=1

# QPIWS: warning_pv_loss

declare -A AXPERT_COMMAND_QPIWS_WARNING_PV_LOSS
AXPERT_COMMAND_QPIWS[warning_pv_loss]="PV Loss Warning"
AXPERT_COMMAND_QPIWS_WARNING_PV_LOSS[INDEX]="1.1"
AXPERT_COMMAND_QPIWS_WARNING_PV_LOSS[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_PV_LOSS[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_PV_LOSS[VALUE_1]="on"

# QPIWS: inverter_fault

declare -A AXPERT_COMMAND_QPIWS_INVERTER_FAULT
AXPERT_COMMAND_QPIWS[inverter_fault]="Inverter Fault"
AXPERT_COMMAND_QPIWS_INVERTER_FAULT[INDEX]="1.2"
AXPERT_COMMAND_QPIWS_INVERTER_FAULT[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_INVERTER_FAULT[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_INVERTER_FAULT[VALUE_1]="on"

# QPIWS: fault_bus_overvoltage

declare -A AXPERT_COMMAND_QPIWS_FAULT_BUS_OVERVOLTAGE
AXPERT_COMMAND_QPIWS[fault_bus_overvoltage]="Bus Overvoltage Fault"
AXPERT_COMMAND_QPIWS_FAULT_BUS_OVERVOLTAGE[INDEX]="1.3"
AXPERT_COMMAND_QPIWS_FAULT_BUS_OVERVOLTAGE[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_BUS_OVERVOLTAGE[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_BUS_OVERVOLTAGE[VALUE_1]="on"

# QPIWS: fault_bus_undervoltage

declare -A AXPERT_COMMAND_QPIWS_FAULT_BUS_UNDERVOLTAGE
AXPERT_COMMAND_QPIWS[fault_bus_undervoltage]="Bus Undervoltage Fault"
AXPERT_COMMAND_QPIWS_FAULT_BUS_UNDERVOLTAGE[INDEX]="1.4"
AXPERT_COMMAND_QPIWS_FAULT_BUS_UNDERVOLTAGE[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_BUS_UNDERVOLTAGE[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_BUS_UNDERVOLTAGE[VALUE_1]="on"

# QPIWS: fault_bus_soft_fail

declare -A AXPERT_COMMAND_QPIWS_FAULT_BUS_SOFT_FAIL
AXPERT_COMMAND_QPIWS[fault_bus_soft_fail]="Bus Soft Fail Fault"
AXPERT_COMMAND_QPIWS_FAULT_BUS_SOFT_FAIL[INDEX]="1.5"
AXPERT_COMMAND_QPIWS_FAULT_BUS_SOFT_FAIL[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_BUS_SOFT_FAIL[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_BUS_SOFT_FAIL[VALUE_1]="on"

# QPIWS: warning_line_fail

declare -A AXPERT_COMMAND_QPIWS_WARNING_LINE_FAIL
AXPERT_COMMAND_QPIWS[warning_line_fail]="Line Fail Warning"
AXPERT_COMMAND_QPIWS_WARNING_LINE_FAIL[INDEX]="1.6"
AXPERT_COMMAND_QPIWS_WARNING_LINE_FAIL[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_LINE_FAIL[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_LINE_FAIL[VALUE_1]="on"

# QPIWS: fault_opv_short

declare -A AXPERT_COMMAND_QPIWS_FAULT_OPV_SHORT
AXPERT_COMMAND_QPIWS[fault_opv_short]="OPV Short Fault"
AXPERT_COMMAND_QPIWS_FAULT_OPV_SHORT[INDEX]="1.7"
AXPERT_COMMAND_QPIWS_FAULT_OPV_SHORT[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_OPV_SHORT[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_OPV_SHORT[VALUE_1]="on"

# QPIWS: fault_inverter_undervoltage

declare -A AXPERT_COMMAND_QPIWS_FAULT_INVERTER_UNDERVOLTAGE
AXPERT_COMMAND_QPIWS[fault_inverter_undervoltage]="Undervoltage Fault"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_UNDERVOLTAGE[INDEX]="1.8"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_UNDERVOLTAGE[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_UNDERVOLTAGE[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_UNDERVOLTAGE[VALUE_1]="on"

# QPIWS: fault_inverter_overvoltage

declare -A AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERVOLTAGE
AXPERT_COMMAND_QPIWS[fault_inverter_overvoltage]="Overvoltage Fault"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERVOLTAGE[INDEX]="1.9"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERVOLTAGE[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERVOLTAGE[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERVOLTAGE[VALUE_1]="on"

# QPIWS: fault_overheat

declare -A AXPERT_COMMAND_QPIWS_FAULT_OVERHEAT
AXPERT_COMMAND_QPIWS[fault_overheat]="Inverter Overheat"
AXPERT_COMMAND_QPIWS_FAULT_OVERHEAT[INDEX]="1.10"
AXPERT_COMMAND_QPIWS_FAULT_OVERHEAT[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_OVERHEAT[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_OVERHEAT[VALUE_1]="on"

# QPIWS: fault_fan_locked

declare -A AXPERT_COMMAND_QPIWS_FAULT_FAN_LOCKED
AXPERT_COMMAND_QPIWS[fault_fan_locked]="Fan Locked"
AXPERT_COMMAND_QPIWS_FAULT_FAN_LOCKED[INDEX]="1.11"
AXPERT_COMMAND_QPIWS_FAULT_FAN_LOCKED[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_FAN_LOCKED[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_FAN_LOCKED[VALUE_1]="on"

# QPIWS: fault_battery_overvoltage

declare -A AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OVERVOLTAGE
AXPERT_COMMAND_QPIWS[fault_battery_overvoltage]="Battery Overvoltage Fault"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OVERVOLTAGE[INDEX]="1.12"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OVERVOLTAGE[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OVERVOLTAGE[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OVERVOLTAGE[VALUE_1]="on"

# QPIWS: warning_battery_low

declare -A AXPERT_COMMAND_QPIWS_WARNING_BATTERY_LOW
AXPERT_COMMAND_QPIWS[warning_battery_low]="Battery Low Warning"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_LOW[INDEX]="1.13"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_LOW[TYPE]="binary_sensor.battery"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_LOW[VALUE_0]="battery ok"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_LOW[VALUE_1]="battery low"

# QPIWS: warning_battery_shutdown

declare -A AXPERT_COMMAND_QPIWS_WARNING_BATTERY_SHUTDOWN
AXPERT_COMMAND_QPIWS[warning_battery_shutdown]="Battery Shutdown Warning"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_SHUTDOWN[INDEX]="1.15"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_SHUTDOWN[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_SHUTDOWN[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_SHUTDOWN[VALUE_1]="on"

# QPIWS: warning_battery_derating

declare -A AXPERT_COMMAND_QPIWS_WARNING_BATTERY_DERATING
AXPERT_COMMAND_QPIWS[warning_battery_derating]="Battery Derating Warning"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_DERATING[INDEX]="1.16"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_DERATING[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_DERATING[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_DERATING[VALUE_1]="on"

# QPIWS: fault_overload

declare -A AXPERT_COMMAND_QPIWS_FAULT_OVERLOAD
AXPERT_COMMAND_QPIWS[fault_overload]="Inverter Overload"
AXPERT_COMMAND_QPIWS_FAULT_OVERLOAD[INDEX]="1.17"
AXPERT_COMMAND_QPIWS_FAULT_OVERLOAD[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_OVERLOAD[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_OVERLOAD[VALUE_1]="on"

# QPIWS: warning_eeprom_fault

declare -A AXPERT_COMMAND_QPIWS_WARNING_EEPROM_FAULT
AXPERT_COMMAND_QPIWS[warning_eeprom_fault]="EEPROM Fault Warning"
AXPERT_COMMAND_QPIWS_WARNING_EEPROM_FAULT[INDEX]="1.18"
AXPERT_COMMAND_QPIWS_WARNING_EEPROM_FAULT[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_EEPROM_FAULT[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_EEPROM_FAULT[VALUE_1]="on"

# QPIWS: fault_inverter_overcurrent

declare -A AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERCURRENT
AXPERT_COMMAND_QPIWS[fault_inverter_overcurrent]="Overcurrent Fault"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERCURRENT[INDEX]="1.19"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERCURRENT[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERCURRENT[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_OVERCURRENT[VALUE_1]="on"

# QPIWS: fault_inverter_soft_fail

declare -A AXPERT_COMMAND_QPIWS_FAULT_INVERTER_SOFT_FAIL
AXPERT_COMMAND_QPIWS[fault_inverter_soft_fail]="Soft Fail Fault"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_SOFT_FAIL[INDEX]="1.20"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_SOFT_FAIL[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_SOFT_FAIL[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_INVERTER_SOFT_FAIL[VALUE_1]="on"

# QPIWS: fault_self_test_fail

declare -A AXPERT_COMMAND_QPIWS_FAULT_SELF_TEST_FAIL
AXPERT_COMMAND_QPIWS[fault_self_test_fail]="Self Test Fail Fault"
AXPERT_COMMAND_QPIWS_FAULT_SELF_TEST_FAIL[INDEX]="1.21"
AXPERT_COMMAND_QPIWS_FAULT_SELF_TEST_FAIL[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_SELF_TEST_FAIL[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_SELF_TEST_FAIL[VALUE_1]="on"

# QPIWS: fault_op_dc_overvoltage

declare -A AXPERT_COMMAND_QPIWS_FAULT_OP_DC_OVERVOLTAGE
AXPERT_COMMAND_QPIWS[fault_op_dc_overvoltage]="OP DC Overvoltage Fault"
AXPERT_COMMAND_QPIWS_FAULT_OP_DC_OVERVOLTAGE[INDEX]="1.22"
AXPERT_COMMAND_QPIWS_FAULT_OP_DC_OVERVOLTAGE[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_OP_DC_OVERVOLTAGE[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_OP_DC_OVERVOLTAGE[VALUE_1]="on"

# QPIWS: fault_battery_open

declare -A AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OPEN
AXPERT_COMMAND_QPIWS[fault_battery_open]="Battery Open Fault"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OPEN[INDEX]="1.23"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OPEN[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OPEN[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_OPEN[VALUE_1]="on"

# QPIWS: fault_current_sensor_fail

declare -A AXPERT_COMMAND_QPIWS_FAULT_CURRENT_SENSOR_FAIL
AXPERT_COMMAND_QPIWS[fault_current_sensor_fail]="Current Sensor Fail Fault"
AXPERT_COMMAND_QPIWS_FAULT_CURRENT_SENSOR_FAIL[INDEX]="1.24"
AXPERT_COMMAND_QPIWS_FAULT_CURRENT_SENSOR_FAIL[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_CURRENT_SENSOR_FAIL[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_CURRENT_SENSOR_FAIL[VALUE_1]="on"

# QPIWS: fault_battery_short

declare -A AXPERT_COMMAND_QPIWS_FAULT_BATTERY_SHORT
AXPERT_COMMAND_QPIWS[fault_battery_short]="Battery Short Fault"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_SHORT[INDEX]="1.25"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_SHORT[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_SHORT[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_BATTERY_SHORT[VALUE_1]="on"

# QPIWS: warning_power_limit

declare -A AXPERT_COMMAND_QPIWS_WARNING_POWER_LIMIT
AXPERT_COMMAND_QPIWS[warning_power_limit]="Power Limit Warning"
AXPERT_COMMAND_QPIWS_WARNING_POWER_LIMIT[INDEX]="1.26"
AXPERT_COMMAND_QPIWS_WARNING_POWER_LIMIT[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_POWER_LIMIT[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_POWER_LIMIT[VALUE_1]="on"

# QPIWS: fault_pv_overvoltage

declare -A AXPERT_COMMAND_QPIWS_FAULT_PV_OVERVOLTAGE
AXPERT_COMMAND_QPIWS[fault_pv_overvoltage]="PV Overvoltage"
AXPERT_COMMAND_QPIWS_FAULT_PV_OVERVOLTAGE[INDEX]="1.27"
AXPERT_COMMAND_QPIWS_FAULT_PV_OVERVOLTAGE[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_PV_OVERVOLTAGE[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_PV_OVERVOLTAGE[VALUE_1]="on"

# QPIWS: fault_mptt_overload

declare -A AXPERT_COMMAND_QPIWS_FAULT_MPTT_OVERLOAD
AXPERT_COMMAND_QPIWS[fault_mptt_overload]="MPTT Overload Fault"
AXPERT_COMMAND_QPIWS_FAULT_MPTT_OVERLOAD[INDEX]="1.28"
AXPERT_COMMAND_QPIWS_FAULT_MPTT_OVERLOAD[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_MPTT_OVERLOAD[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_MPTT_OVERLOAD[VALUE_1]="on"

# QPIWS: warning_mptt_overload

declare -A AXPERT_COMMAND_QPIWS_WARNING_MPTT_OVERLOAD
AXPERT_COMMAND_QPIWS[warning_mptt_overload]="MPTT Overload Warning"
AXPERT_COMMAND_QPIWS_WARNING_MPTT_OVERLOAD[INDEX]="1.29"
AXPERT_COMMAND_QPIWS_WARNING_MPTT_OVERLOAD[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_MPTT_OVERLOAD[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_MPTT_OVERLOAD[VALUE_1]="on"

# QPIWS: warning_battery_too_low_to_charge

declare -A AXPERT_COMMAND_QPIWS_WARNING_BATTERY_TOO_LOW_TO_CHARGE
AXPERT_COMMAND_QPIWS[warning_battery_too_low_to_charge]="Battery Too Low To Charge Warning"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_TOO_LOW_TO_CHARGE[INDEX]="1.30"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_TOO_LOW_TO_CHARGE[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_TOO_LOW_TO_CHARGE[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_TOO_LOW_TO_CHARGE[VALUE_1]="on"

# QPIWS: fault_dc_dc_overcurrent

declare -A AXPERT_COMMAND_QPIWS_FAULT_DC_DC_OVERCURRENT
AXPERT_COMMAND_QPIWS[fault_dc_dc_overcurrent]="DC-DC Overcurrent Fault"
AXPERT_COMMAND_QPIWS_FAULT_DC_DC_OVERCURRENT[INDEX]="1.31"
AXPERT_COMMAND_QPIWS_FAULT_DC_DC_OVERCURRENT[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_FAULT_DC_DC_OVERCURRENT[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_FAULT_DC_DC_OVERCURRENT[VALUE_1]="on"

# QPIWS: fault_code

declare -A AXPERT_COMMAND_QPIWS_FAULT_CODE
AXPERT_COMMAND_QPIWS[fault_code]="Fault Code"
AXPERT_COMMAND_QPIWS_FAULT_CODE[INDEX]="1.33 1.34"
AXPERT_COMMAND_QPIWS_FAULT_CODE[TYPE]="sensor.enum"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUES]="00 01 02 03 04 05 06 07 08 09 10 51 53 55 57 58 59 60 71 72 80 81 82 83 84 85 86"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_00]=
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_01]="Fan locked (01)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_02]="Overheat (02)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_03]="Battery overvoltage (03)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_04]="Battery undervoltage (04)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_05]="Output short / overheat (05)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_06]="Output overvoltage (06)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_07]="Overload timeout (07)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_08]="Bus overvoltage (08)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_09]="Bus soft start failed (09)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_10]="PV charger overcurrent (10)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_51]="Inverter overcurrent (51)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_53]="Inverter soft star failed (53)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_55]="Output DC overvoltage (55)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_57]="Current sensor failed (57)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_58]="Output undervoltage (58)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_59]="PV voltage too high (59)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_60]="Inverter negative power (60)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_71]="Parallele different versions (71)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_72]="Output circuit failed (72)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_80]="CAN communication failed (80)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_81]="Parallel host line lost (81)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_82]="Parallel syinchronized signal lost (82)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_83]="Parallel different battery voltage (83)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_84]="Parallel different line voltage or frequency (84)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_85]="Parallel unbalanced line input current (85)"
AXPERT_COMMAND_QPIWS_FAULT_CODE[VALUE_86]="Parallel different output setting (86)"

# QPIWS: warning_low_pv_energy (VMIII only, not KING)

# declare -A AXPERT_COMMAND_QPIWS_WARNING_LOW_PV_ENERGY
# AXPERT_COMMAND_QPIWS[warning_low_pv_energy]="Low PV Energy Warning"
# AXPERT_COMMAND_QPIWS_WARNING_LOW_PV_ENERGY[INDEX]="1.34"
# AXPERT_COMMAND_QPIWS_WARNING_LOW_PV_ENERGY[TYPE]="binary_sensor.problem"
# AXPERT_COMMAND_QPIWS_WARNING_LOW_PV_ENERGY[VALUE_0]="off"
# AXPERT_COMMAND_QPIWS_WARNING_LOW_PV_ENERGY[VALUE_1]="on"

# QPIWS: warning_high_ac_input_during_soft_start

declare -A AXPERT_COMMAND_QPIWS_WARNING_HIGH_AC_INPUT_DURING_SOFT_START
AXPERT_COMMAND_QPIWS[warning_high_ac_input_during_soft_start]="High AC Input During Soft Start Warning"
AXPERT_COMMAND_QPIWS_WARNING_HIGH_AC_INPUT_DURING_SOFT_START[INDEX]="1.35"
AXPERT_COMMAND_QPIWS_WARNING_HIGH_AC_INPUT_DURING_SOFT_START[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_HIGH_AC_INPUT_DURING_SOFT_START[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_HIGH_AC_INPUT_DURING_SOFT_START[VALUE_1]="on"

# QPIWS: warning_battery_equalization

declare -A AXPERT_COMMAND_QPIWS_WARNING_BATTERY_EQUALIZATION
AXPERT_COMMAND_QPIWS[warning_battery_equalization]="Battery Equalization Warning"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_EQUALIZATION[INDEX]="1.36"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_EQUALIZATION[TYPE]="binary_sensor.problem"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_EQUALIZATION[VALUE_0]="off"
AXPERT_COMMAND_QPIWS_WARNING_BATTERY_EQUALIZATION[VALUE_1]="on"


# -----------------------------------------------------------------------------------------------------------
# QPIGS
# -----------------------------------------------------------------------------------------------------------

declare -A AXPERT_COMMAND_QPIGS
AXPERT_COMMAND_QPIGS_RESPONSE_COUNT=21

# QPIGS: grid_voltage

declare -A AXPERT_COMMAND_QPIGS_GRID_VOLTAGE
AXPERT_COMMAND_QPIGS[grid_voltage]="Grid Voltage"
AXPERT_COMMAND_QPIGS_GRID_VOLTAGE[INDEX]=1
AXPERT_COMMAND_QPIGS_GRID_VOLTAGE[TYPE]="measurement.voltage"
AXPERT_COMMAND_QPIGS_GRID_VOLTAGE[UNITS]="V"

# QPIGS: grid_frequency

declare -A AXPERT_COMMAND_QPIGS_GRID_FREQUENCY
AXPERT_COMMAND_QPIGS[grid_frequency]="Grid Frequency"
AXPERT_COMMAND_QPIGS_GRID_FREQUENCY[INDEX]=2
AXPERT_COMMAND_QPIGS_GRID_FREQUENCY[TYPE]="measurement.frequency"
AXPERT_COMMAND_QPIGS_GRID_FREQUENCY[UNITS]="Hz"

# QPIGS: ac_output_voltage

declare -A AXPERT_COMMAND_QPIGS_AC_OUTPUT_VOLTAGE
AXPERT_COMMAND_QPIGS[ac_output_voltage]="AC Output Voltage"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_VOLTAGE[INDEX]=3
AXPERT_COMMAND_QPIGS_AC_OUTPUT_VOLTAGE[TYPE]="measurement.voltage"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_VOLTAGE[UNITS]="V"

# QPIGS: ac_output_frequency

declare -A AXPERT_COMMAND_QPIGS_AC_OUTPUT_FREQUENCY
AXPERT_COMMAND_QPIGS[ac_output_frequency]="AC Output Frequency"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_FREQUENCY[INDEX]=4
AXPERT_COMMAND_QPIGS_AC_OUTPUT_FREQUENCY[TYPE]="measurement.frequency"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_FREQUENCY[UNITS]="Hz"

# QPIGS: ac_output_apparent_power

declare -A AXPERT_COMMAND_QPIGS_AC_OUTPUT_APPARENT_POWER
AXPERT_COMMAND_QPIGS[ac_output_apparent_power]="AC Output Apparent Power"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_APPARENT_POWER[INDEX]=5
AXPERT_COMMAND_QPIGS_AC_OUTPUT_APPARENT_POWER[TYPE]="measurement.apparent_power"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_APPARENT_POWER[UNITS]="VA"

# QPIGS: ac_output_active_power

declare -A AXPERT_COMMAND_QPIGS_AC_OUTPUT_ACTIVE_POWER
AXPERT_COMMAND_QPIGS[ac_output_active_power]="AC Output Active Power"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_ACTIVE_POWER[INDEX]=6
AXPERT_COMMAND_QPIGS_AC_OUTPUT_ACTIVE_POWER[TYPE]="measurement.power"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_ACTIVE_POWER[UNITS]="W"

# QPIGS: output_load_percent

declare -A AXPERT_COMMAND_QPIGS_OUTPUT_LOAD_PERCENT
AXPERT_COMMAND_QPIGS[output_load_percent]="Output Load Percent"
AXPERT_COMMAND_QPIGS_OUTPUT_LOAD_PERCENT[INDEX]=7
AXPERT_COMMAND_QPIGS_OUTPUT_LOAD_PERCENT[TYPE]="measurement"
AXPERT_COMMAND_QPIGS_OUTPUT_LOAD_PERCENT[UNITS]="%"

# QPIGS: bus_voltage

declare -A AXPERT_COMMAND_QPIGS_BUS_VOLTAGE
AXPERT_COMMAND_QPIGS[bus_voltage]="Bus Voltage"
AXPERT_COMMAND_QPIGS_BUS_VOLTAGE[INDEX]=8
AXPERT_COMMAND_QPIGS_BUS_VOLTAGE[TYPE]="measurement.voltage"
AXPERT_COMMAND_QPIGS_BUS_VOLTAGE[UNITS]="V"

# QPIGS: battery_voltage

declare -A AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE
AXPERT_COMMAND_QPIGS[battery_voltage]="Battery Voltage"
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE[INDEX]=9
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE[TYPE]="measurement.voltage"
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE[UNITS]="V"

# QPIGS: battery_charging_current

declare -A AXPERT_COMMAND_QPIGS_BATTERY_CHARGING_CURRENT
AXPERT_COMMAND_QPIGS[battery_charging_current]="Battery Charging Current"
AXPERT_COMMAND_QPIGS_BATTERY_CHARGING_CURRENT[INDEX]=10
AXPERT_COMMAND_QPIGS_BATTERY_CHARGING_CURRENT[TYPE]="measurement.current"
AXPERT_COMMAND_QPIGS_BATTERY_CHARGING_CURRENT[UNITS]="A"

# QPIGS: battery_capacity

declare -A AXPERT_COMMAND_QPIGS_BATTERY_CAPACITY
AXPERT_COMMAND_QPIGS[battery_capacity]="Battery Capacity"
AXPERT_COMMAND_QPIGS_BATTERY_CAPACITY[INDEX]=11
AXPERT_COMMAND_QPIGS_BATTERY_CAPACITY[TYPE]="measurement.battery"
AXPERT_COMMAND_QPIGS_BATTERY_CAPACITY[UNITS]="%"

# QPIGS: inverter_heatsink_temperature

declare -A AXPERT_COMMAND_QPIGS_INVERTER_HEATSINK_TEMPERATURE
AXPERT_COMMAND_QPIGS[inverter_heatsink_temperature]="Heatsink Temperature"
AXPERT_COMMAND_QPIGS_INVERTER_HEATSINK_TEMPERATURE[INDEX]=12
AXPERT_COMMAND_QPIGS_INVERTER_HEATSINK_TEMPERATURE[TYPE]="measurement.temperature"
AXPERT_COMMAND_QPIGS_INVERTER_HEATSINK_TEMPERATURE[UNITS]="°C"

# QPIGS: pv_input_current_for_battery

declare -A AXPERT_COMMAND_QPIGS_PV_INPUT_CURRENT_FOR_BATTERY
AXPERT_COMMAND_QPIGS[pv_input_current_for_battery]="PV Input Current for Battery"
AXPERT_COMMAND_QPIGS_PV_INPUT_CURRENT_FOR_BATTERY[INDEX]=13
AXPERT_COMMAND_QPIGS_PV_INPUT_CURRENT_FOR_BATTERY[TYPE]="measurement.current"
AXPERT_COMMAND_QPIGS_PV_INPUT_CURRENT_FOR_BATTERY[UNITS]="A"

# QPIGS: pv_input_voltage

declare -A AXPERT_COMMAND_QPIGS_PV_INPUT_VOLTAGE
AXPERT_COMMAND_QPIGS[pv_input_voltage]="PV Input Voltage"
AXPERT_COMMAND_QPIGS_PV_INPUT_VOLTAGE[INDEX]=14
AXPERT_COMMAND_QPIGS_PV_INPUT_VOLTAGE[TYPE]="measurement.voltage"
AXPERT_COMMAND_QPIGS_PV_INPUT_VOLTAGE[UNITS]="V"

# QPIGS: battery_voltage_from_scc

declare -A AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE_FROM_SCC
AXPERT_COMMAND_QPIGS[battery_voltage_from_scc]="Battery Voltage From SCC"
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE_FROM_SCC[INDEX]=15
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE_FROM_SCC[TYPE]="measurement.voltage"
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE_FROM_SCC[UNITS]="V"

# QPIGS: battery_discharging_current

declare -A AXPERT_COMMAND_QPIGS_BATTERY_DISCHARGING_CURRENT
AXPERT_COMMAND_QPIGS[battery_discharging_current]="Battery Discharging Current"
AXPERT_COMMAND_QPIGS_BATTERY_DISCHARGING_CURRENT[INDEX]=16
AXPERT_COMMAND_QPIGS_BATTERY_DISCHARGING_CURRENT[TYPE]="measurement.current"
AXPERT_COMMAND_QPIGS_BATTERY_DISCHARGING_CURRENT[UNITS]="A"

# QPIGS: pv_or_ac_feed_load

declare -A AXPERT_COMMAND_QPIGS_PV_OR_AC_FEED_LOAD
AXPERT_COMMAND_QPIGS[pv_or_ac_feed_load]="PV or AC Feed Load"
AXPERT_COMMAND_QPIGS_PV_OR_AC_FEED_LOAD[INDEX]="17.1"
AXPERT_COMMAND_QPIGS_PV_OR_AC_FEED_LOAD[TYPE]="binary_sensor"
AXPERT_COMMAND_QPIGS_PV_OR_AC_FEED_LOAD[VALUE_0]="on"
AXPERT_COMMAND_QPIGS_PV_OR_AC_FEED_LOAD[VALUE_1]="off"

# QPIGS: device_configuration_changed

declare -A AXPERT_COMMAND_QPIGS_DEVICE_CONFIGURATION_CHANGED
AXPERT_COMMAND_QPIGS[device_configuration_changed]="Device Configuration Changed"
AXPERT_COMMAND_QPIGS_DEVICE_CONFIGURATION_CHANGED[INDEX]="17.2"
AXPERT_COMMAND_QPIGS_DEVICE_CONFIGURATION_CHANGED[TYPE]="!binary_sensor"
AXPERT_COMMAND_QPIGS_DEVICE_CONFIGURATION_CHANGED[VALUE_0]="false"
AXPERT_COMMAND_QPIGS_DEVICE_CONFIGURATION_CHANGED[VALUE_1]="true"

# QPIGS: device_scc_firmware_updated

declare -A AXPERT_COMMAND_QPIGS_DEVICE_SCC_FIRMWARE_UPDATED
AXPERT_COMMAND_QPIGS[device_scc_firmware_updated]="Device SCC Firmware Updated"
AXPERT_COMMAND_QPIGS_DEVICE_SCC_FIRMWARE_UPDATED[INDEX]="17.3"
AXPERT_COMMAND_QPIGS_DEVICE_SCC_FIRMWARE_UPDATED[TYPE]="!binary_sensor"
AXPERT_COMMAND_QPIGS_DEVICE_SCC_FIRMWARE_UPDATED[VALUE_0]="false"
AXPERT_COMMAND_QPIGS_DEVICE_SCC_FIRMWARE_UPDATED[VALUE_1]="true"

# QPIGS: load

declare -A AXPERT_COMMAND_QPIGS_LOAD
AXPERT_COMMAND_QPIGS[load]="Load"
AXPERT_COMMAND_QPIGS_LOAD[INDEX]="17.4"
AXPERT_COMMAND_QPIGS_LOAD[TYPE]="binary_sensor.power"
AXPERT_COMMAND_QPIGS_LOAD[VALUE_0]="off"
AXPERT_COMMAND_QPIGS_LOAD[VALUE_1]="on"

# QPIGS: charging

declare -A AXPERT_COMMAND_QPIGS_CHARGING
AXPERT_COMMAND_QPIGS[charging]="Charging"
AXPERT_COMMAND_QPIGS_CHARGING[INDEX]="17.6"
AXPERT_COMMAND_QPIGS_CHARGING[TYPE]="binary_sensor.battery_charging"
AXPERT_COMMAND_QPIGS_CHARGING[VALUE_0]="charging"
AXPERT_COMMAND_QPIGS_CHARGING[VALUE_1]="not charging"

# QPIGS: scc_charging

declare -A AXPERT_COMMAND_QPIGS_SCC_CHARGING
AXPERT_COMMAND_QPIGS[scc_charging]="SCC Charging"
AXPERT_COMMAND_QPIGS_SCC_CHARGING[INDEX]="17.7"
AXPERT_COMMAND_QPIGS_SCC_CHARGING[TYPE]="binary_sensor.battery_charging"
AXPERT_COMMAND_QPIGS_SCC_CHARGING[VALUE_0]="charging"
AXPERT_COMMAND_QPIGS_SCC_CHARGING[VALUE_1]="not charging"

# QPIGS: ac_charging

declare -A AXPERT_COMMAND_QPIGS_AC_CHARGING
AXPERT_COMMAND_QPIGS[ac_charging]="AC Charging"
AXPERT_COMMAND_QPIGS_AC_CHARGING[INDEX]="17.8"
AXPERT_COMMAND_QPIGS_AC_CHARGING[TYPE]="binary_sensor.battery_charging"
AXPERT_COMMAND_QPIGS_AC_CHARGING[VALUE_0]="charging"
AXPERT_COMMAND_QPIGS_AC_CHARGING[VALUE_1]="not charging"

# QPIGS: battery_voltage_offset_for_fans_on

declare -A AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE_OFFSET_FOR_FANS_ON
AXPERT_COMMAND_QPIGS[battery_voltage_offset_for_fans_on]="Battery Voltage Offset for Fans On"
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE_OFFSET_FOR_FANS_ON[INDEX]=18
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE_OFFSET_FOR_FANS_ON[TYPE]="!sensor.voltage"
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE_OFFSET_FOR_FANS_ON[POSTPROCESS]="axpert_postprocess_cv_to_mv"
AXPERT_COMMAND_QPIGS_BATTERY_VOLTAGE_OFFSET_FOR_FANS_ON[UNITS]="mV"

# QPIGS: device_eeprom_version

declare -A AXPERT_COMMAND_QPIGS_DEVICE_EEPROM_VERSION
AXPERT_COMMAND_QPIGS[device_eeprom_version]="Device EEPROM Version"
AXPERT_COMMAND_QPIGS_DEVICE_EEPROM_VERSION[INDEX]=19
AXPERT_COMMAND_QPIGS_DEVICE_EEPROM_VERSION[TYPE]="!sensor"

# QPIGS: pv_charging_power

declare -A AXPERT_COMMAND_QPIGS_PV_CHARGING_POWER
AXPERT_COMMAND_QPIGS[pv_charging_power]="PV Charging Power"
AXPERT_COMMAND_QPIGS_PV_CHARGING_POWER[INDEX]=20
AXPERT_COMMAND_QPIGS_PV_CHARGING_POWER[TYPE]="sensor.power"
AXPERT_COMMAND_QPIGS_PV_CHARGING_POWER[UNITS]="W"

# QPIGS: floating_charging_mode

declare -A AXPERT_COMMAND_QPIGS_FLOATING_CHARGING_MODE
AXPERT_COMMAND_QPIGS[floating_charging_mode]="Floating Charging Mode"
AXPERT_COMMAND_QPIGS_FLOATING_CHARGING_MODE[INDEX]="21.1"
AXPERT_COMMAND_QPIGS_FLOATING_CHARGING_MODE[TYPE]="binary_sensor"
AXPERT_COMMAND_QPIGS_FLOATING_CHARGING_MODE[VALUE_0]="off"
AXPERT_COMMAND_QPIGS_FLOATING_CHARGING_MODE[VALUE_1]="on"

# QPIGS: device_switch

declare -A AXPERT_COMMAND_QPIGS_DEVICE_SWITCH
AXPERT_COMMAND_QPIGS[device_switch]="Device Switch"
AXPERT_COMMAND_QPIGS_DEVICE_SWITCH[INDEX]="21.2"
AXPERT_COMMAND_QPIGS_DEVICE_SWITCH[TYPE]="binary_sensor"
AXPERT_COMMAND_QPIGS_DEVICE_SWITCH[VALUE_0]="off"
AXPERT_COMMAND_QPIGS_DEVICE_SWITCH[VALUE_1]="on"

# QPIGS: device_dustproof

declare -A AXPERT_COMMAND_QPIGS_DEVICE_DUSTPROOF
AXPERT_COMMAND_QPIGS[device_dustproof]="Device Dustproof"
AXPERT_COMMAND_QPIGS_DEVICE_DUSTPROOF[INDEX]="21.3"
AXPERT_COMMAND_QPIGS_DEVICE_DUSTPROOF[TYPE]="!binary_sensor"
AXPERT_COMMAND_QPIGS_DEVICE_DUSTPROOF[VALUE_0]="false"
AXPERT_COMMAND_QPIGS_DEVICE_DUSTPROOF[VALUE_1]="true"

# QPIGS: ac_output_power_factor

declare -A AXPERT_COMMAND_QPIGS_AC_OUTPUT_POWER_FACTOR
AXPERT_COMMAND_QPIGS[ac_output_power_factor]="AC Output Power Factor"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_POWER_FACTOR[INDEX]="axpert_calculate_power_factor {ac_output_active_power} {ac_output_apparent_power}"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_POWER_FACTOR[TYPE]="measurement.power_factor"
AXPERT_COMMAND_QPIGS_AC_OUTPUT_POWER_FACTOR[UNITS]=

# Calculated

function axpert_calculate_power_factor {
	local ACTIVE_POWER="10#$1"
	local APPARENT_POWER="10#$2"
	local PF="100"

	[ "0" -ne "$[ $APPARENT_POWER ]" ] && PF="00$[ $[ $ACTIVE_POWER * 100 + $APPARENT_POWER / 2 ] / $APPARENT_POWER ]"

	PF="${PF: -3:3}"

	echo "${PF:0:1}.${PF:1:2}"
}


# -----------------------------------------------------------------------------------------------------------
# Preset modes
# -----------------------------------------------------------------------------------------------------------

# device: preset_mode

declare -A AXPERT_COMMAND_QPIRI_PRESET_MODE
AXPERT_COMMAND_QPIRI[preset_mode]="Preset Mode"
# AXPERT_COMMAND_QPIRI_PRESET_MODE[INDEX]="axpert_preset_mode {operation_logic} {output_source_priority} {charger_source_priority}"
AXPERT_COMMAND_QPIRI_PRESET_MODE[INDEX]="axpert_preset_mode {operation_logic} {charger_source_priority}"
AXPERT_COMMAND_QPIRI_PRESET_MODE[TYPE]="select"
AXPERT_COMMAND_QPIRI_PRESET_MODE[VALUES]="online battery bypass bypass-no-charge"
AXPERT_COMMAND_QPIRI_PRESET_MODE[VALUE_ONLINE]="Online"
AXPERT_COMMAND_QPIRI_PRESET_MODE[VALUE_BATTERY]="Battery"
AXPERT_COMMAND_QPIRI_PRESET_MODE[VALUE_BYPASS]="Bypass"
AXPERT_COMMAND_QPIRI_PRESET_MODE[VALUE_BYPASS_NO_CHARGE]="Bypass (No Grid Charging)"

declare -A AXPERT_SETTING_PRESET_MODE
AXPERT_SETTINGS[preset_mode]="QPIRI"
AXPERT_SETTING_PRESET_MODE[COMMAND]=""
AXPERT_SETTING_PRESET_MODE[COMMAND_ONLINE]="#POPLG01 PCP02"
AXPERT_SETTING_PRESET_MODE[COMMAND_BATTERY]="#POPLG01 PCP03"
AXPERT_SETTING_PRESET_MODE[COMMAND_BYPASS]="#POPLG02 PCP00"
AXPERT_SETTING_PRESET_MODE[COMMAND_BYPASS_NO_CHARGE]="#POPLG02 PCP01"

function axpert_preset_mode {
	local OPERATION_LOGIC="${1//[^a-zA-Z]/}"
	local CHARGER_SOURCE_PRIORITY="${2//[^a-zA-Z]/}"

	local PRESET=

	case "${OPERATION_LOGIC}:${CHARGER_SOURCE_PRIORITY}"
	in
		Online:LoadFirst )
			PRESET="online"
			;;

		Online:LoadFirstNoGrid )
			PRESET="battery"
			;;

		Eco:SolarFirst )
			PRESET="bypass"
			;;
			
		Eco:SolarFirstNoGrid )
			PRESET="bypass-no-charge"
			;;
	esac

	echo "${PRESET}"
}


# -----------------------------------------------------------------------------------------------------------
# Integration commands
# -----------------------------------------------------------------------------------------------------------

AXPERT_STATUS_COMMANDS[config]="!"
declare -A AXPERT_COMMAND

# device: config_mode

declare -A AXPERT_COMMAND___CONFIG_MODE
AXPERT_COMMAND[config_mode]="Config Mode"
AXPERT_COMMAND___CONFIG_MODE[INDEX]="axpert-get-config-mode"
AXPERT_COMMAND___CONFIG_MODE[TYPE]="switch"
AXPERT_COMMAND___CONFIG_MODE[VALUE_0]="disabled"
AXPERT_COMMAND___CONFIG_MODE[VALUE_1]="enabled"
AXPERT_COMMAND___CONFIG_MODE[ICON]="mdi:lock"

declare -A AXPERT_SETTING_CONFIG_MODE
AXPERT_SETTINGS[config_mode]="!"
AXPERT_SETTING_CONFIG_MODE[COMMAND]="!axpert-set-config-mode"

# device: unlock_config_mode_pin

declare -A AXPERT_COMMAND___UNLOCK_CONFIG_MODE_PIN
AXPERT_COMMAND[unlock_config_mode_pin]="Unlock Config Mode"
AXPERT_COMMAND___UNLOCK_CONFIG_MODE_PIN[INDEX]="axpert_config_mode_pin_stub"
AXPERT_COMMAND___UNLOCK_CONFIG_MODE_PIN[TYPE]="text"
AXPERT_COMMAND___UNLOCK_CONFIG_MODE_PIN[DEFAULT]=""
AXPERT_COMMAND___UNLOCK_CONFIG_MODE_PIN[ICON]="mdi:lock"

declare -A AXPERT_SETTING_UNLOCK_CONFIG_MODE_PIN
AXPERT_SETTINGS[unlock_config_mode_pin]="!"
AXPERT_SETTING_UNLOCK_CONFIG_MODE_PIN[COMMAND]="!axpert_unlock_config_mode"


# -----------------------------------------------------------------------------------------------------------
# Integration functions
# -----------------------------------------------------------------------------------------------------------

function axpert_postprocess_cv_to_mv {
	echo "$[ 10#${1:-0}0 ]"
}

function axpert_postprocess_wh_to_kwh {
	local VALUE="000${1}"

	echo "$[ 10#${VALUE:0:-3} ].${VALUE: -3}"
}

function axpert_postprocess_firmware_version {
	[ -n "${1//[0.]}" ] && echo "$1"
}

function axpert_postprocess_setting_flags {
	[ -z "${2//E*D*${1}*}" ] && echo "disabled"
	[ -z "${2//E*${1}*D*}" ] && echo "enabled"
}


# -----------------------------------------------------------------------------------------------------------
# Config mode functions
# -----------------------------------------------------------------------------------------------------------

function axpert_config_mode_pin_stub {
	echo ""
}

function axpert_unlock_config_mode {
	[ -z "${CONFIG[CONFIG_MODE_PIN]}" ] && {
		echo "Cannot Disable Config Mode (no PIN)" >&2
		return 1
	}

	if [ ":$1" = ":${CONFIG[CONFIG_MODE_PIN]}" ]
	then
		axpert-set-config-mode "enabled" "+"
	else
		echo "Incorrect PIN provided for Config Mode" >&2
	fi
}


